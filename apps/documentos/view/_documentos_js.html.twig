<script type="text/javascript">

fnjs_cancelar=function(){
    if (event != undefined) {
        event.preventDefault();
        event.stopPropagation();
        event.stopImmediatePropagation();
        // Asegurarme que es por click y no por return (posicion: 0,0)
        var x = event.x || event.clientX;
        var y = event.y || event.clientY;
        if (!x && !y) {
            return false;
        }
    }
	fnjs_update_div('#main','{{ pagina_cancel|raw }}');
}

fnjs_guardar=function(quiet=0){
    event.preventDefault();
    event.stopPropagation();
    event.stopImmediatePropagation();
	// Asegurarme que es por click y no por return (posicion: 0,0)
	var x = event.x || event.clientX;
    var y = event.y || event.clientY;
    if (!x && !y) {
    	return false;
    }
    
	var err=0;
	//var destino=$('#destino').val();
	var id_doc=$('#id_doc').val();
	var nom=$('#nom').val();

	if (!nom) { alert("{{ "Debe llenar el campo de nom"|trans|raw }}"); err=1; }
	
	if (err!=1) {
		$('#que').val('guardar');
		datos = $('#form_escrito').serialize();	
		request=$.ajax({
			data: datos,
			url: '{{ url_update }}',
			type: 'post',
			dataType: 'json'
		});
		request.done( function (json) {
			if (json.success != true) {
				alert ('{{ "respuesta"|trans|raw }}: '+json.mensaje);
			} else {
                id = json.id_doc;
                if (id != id_doc) {
                    // caso de nuevo escrito
                    $('#id_doc').val(id);
                        /*
                        $.confirm({
                            title: '{{ "datos guardados"|trans }}',
                            content: '{{ "¿añadir escrito o adjuntos?"|trans }}',
                            buttons: {
                                {{ "Sí"|trans }}: function () {
                                    // ir al form expediente.
                                    fnjs_update_div('#main',json.pagina_mod);
                                },
                                {{ "No"|trans }}: function () {
                                    //$.alert('Canceled!');
                                    alert ("{{ "datos guardados"|trans|raw }}");
                                    // Volver a la lista...
                                    fnjs_update_div('#main','{{ pagina_cancel|raw }}');
                                }
                            }
                        });
                        */
                }
                if (quiet!=1) {
                    alert ("{{ "datos guardados"|trans|raw }}");
                    // Volver a la lista...
                    fnjs_update_div('#main','{{ pagina_cancel|raw }}');
				}
			}
		});
	}
}

fnjs_ver_doc_ep=function() {
    event.preventDefault();
	event.stopPropagation();
	event.stopImmediatePropagation();
	// primero guardar los datos que se hayan modificado, porque si pasa algo hay que volver a meterlos.
	fnjs_guardar(1);
	var nom=$('#nom').val();
	
	var id_escrito=$('#id_escrito').val();
    var winPrefs="dependent=yes,width=1400,height=800,screenX=200,screenY=200,titlebar=yes,scrollbars=yes";
    var url_ajax = 'apps/etherpad/controller/getUrlEscrito.php';
    var param_json = { tipo_id: 'escrito', id: id_escrito };
    
    request=$.ajax({
        data: param_json,
        url: url_ajax,
        type: 'post'
    });

    request.done( function (rta) {
        // antes, dentro del ajax, hacia falta el responseText
        //url=rta.responseText;
        url=rta;
        win=window.open(url, "", winPrefs);
        // Para que al cerrar la ventana se actualize ésta.
        var timer = setInterval(function() { 
            if(win.closed) {
                clearInterval(timer);
                fnjs_actualizar();
            }
        }, 1000);
        win.focus();
    });

	request.fail(function(JqXHR, textStatus, errorThrown){
		alert('An error occurred... Look at the console (F12 or Ctrl+Shift+I, Console tab) for more information!');
        console.error("Hi ha un error: "+ textStatus, errorThrown);
    });

	return false;
}

fnjs_actualizar=function(){
	var filtro=$('#filtro').val();
	var id_doc=$('#id_doc').val();
	var modo=$('#modo').val();
    var url_doc = '{{ url_escrito }}';
    var param_json = { id_doc: id_doc, filtro: filtro, modo: modo };
    request=$.ajax({
        data: param_json,
        url: url_doc,
        type: 'post'
    });
	request.done( function (resposta) {
		fnjs_mostra_resposta (resposta,"#main");
	});
	request.fail(function(JqXHR, textStatus, errorThrown){
		alert('An error occurred... Look at the console (F12 or Ctrl+Shift+I, Console tab) for more information!');
        console.error("Hi ha un error: "+ textStatus, errorThrown);
    });

}

fnjs_add_doc=function(n) {
    event.preventDefault();
	event.stopPropagation();
	event.stopImmediatePropagation();
	// primero guardar los datos que se hayan modificado, porque si pasa algo hay que volver a meterlos.
	fnjs_guardar(1); // El parametro quiet=1 es para que no pregunte nada.  
	//n = 1 -> etherpad
	//n = 2 -> ethercalc
	//n = 3 -> otros
	var err=0;
	var id_doc=$('#id_doc').val();
	
	$('#tipo_doc').val(n);

	//debugger;
	if (!n) { alert("{{ "No se ha definido el tipo de escrito"|trans|raw }}"); err=1; }

	if (err!=1) {
        var url_doc = '{{ url_escrito }}';
        var param_json = { id_doc: id_doc, filtro: filtro, modo: modo };
        request=$.ajax({
            data: param_json,
            url: url_doc,
            type: 'post'
        });
        request.done( function (resposta) {
            fnjs_mostra_resposta (resposta,"#main");
        });
        request.fail(function(JqXHR, textStatus, errorThrown){
            alert('An error occurred... Look at the console (F12 or Ctrl+Shift+I, Console tab) for more information!');
            console.error("Hi ha un error: "+ textStatus, errorThrown);
        });
            // grabar el tipo de doc
        fnjs_guardar(1); // El parametro quiet=1 es para que no pregunte nada.  
		
        switch(n) {
            case 1:
                fnjs_ver_doc_ep();
                break;
            case 2:
                alert('hay que programar la función para ethercalc');
                break;
            case 3:
                $('#upload').show();
                alert('hay que programar la función para otros');
                break;
        }
	}
	return false;
}

{{ oArrayDesplEtiquetas.ComprobarSelectJs|raw }}
fnjs_mas_etiquetas=function(){
	var code = (event.keyCode ? event.keyCode : event.which);
    var valor=1;
    var id_campo='#'+event.currentTarget.id;
    var valor=$(id_campo).val();
    if(code!=9) {
        event.preventDefault();
        event.stopPropagation();
    }
	if ( code==9 || event.type=="change") {
		if (valor!=0) {
			{{ oArrayDesplEtiquetas.ListaSelectsJs|raw }}
		}
	}
}
fnjs_quitar_etiquetas=function(){
	$('#span_etiquetas').html("");
	$('#etiquetas_num').val(0);
}
</script>