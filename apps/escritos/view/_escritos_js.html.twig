<script type="text/javascript">
    /****** PARA los botones de añadir adjuntos desde documentos  **********************/


    fnjs_confirm_insertar_documento = function (tipo, id_doc, id_escrito) {
        $('#ModalBuscar').modal('hide');
        var msg = "{{ "Esto quitará el documento de la carpeta de documentos. Si quiere conservarlo debería insertar una copia."|trans|raw }}";
        // caso de nueva entrada
        $.confirm({
            title: '{{ "AVISO"|trans|raw }}:',
            content: msg,
            columnClass: 'col-md-6',
            buttons: {
                cancel: {
                    text: '{{ "Cancel"|trans|raw }}',
                    action: function () {
                        fnjs_actualizar();
                    }
                },
                adjuntar: {
                    text: '{{ "Insertar"|trans|raw }}',
                    btnClass: 'btn-blue',
                    action: function () {
                        fnjs_insertar_documento(tipo, id_doc, id_escrito);
                    }
                },
                somethingElse: {
                    text: '{{ "insertar una copia"|trans|raw }}',
                    btnClass: 'btn-secondary',
                    // Nueva entrada.
                    action: function () {
                        fnjs_insertar_copia_documento(tipo, id_doc, id_escrito);
                    }
                }
            },
            onContentReady: function () {
                $('.jconfirm-buttons').find('button:contains("{{ "Insertar"|trans|raw }}")').focus()
            }
        });
    }

    fnjs_confirm_adjuntar_documento = function (tipo, id_doc, id_escrito) {
        $('#ModalBuscar').modal('hide');
        var msg = "{{ "Esto quitará el documento de la carpeta de documentos. Si quiere conservarlo debería adjuntar una copia."|trans|raw }}";
        // caso de nueva entrada
        $.confirm({
            title: '{{ "AVISO"|trans|raw }}:',
            content: msg,
            columnClass: 'col-md-6',
            buttons: {
                cancel: {
                    text: '{{ "Cancel"|trans|raw }}',
                    action: function () {
                        fnjs_actualizar();
                    }
                },
                adjuntar: {
                    text: '{{ "Adjuntar"|trans|raw }}',
                    btnClass: 'btn-blue',
                    action: function () {
                        fnjs_adjuntar_documento(tipo, id_doc, id_escrito);
                    }
                },
                somethingElse: {
                    text: '{{ "adjuntar una copia"|trans|raw }}',
                    btnClass: 'btn-secondary',
                    // Nueva entrada.
                    action: function () {
                        fnjs_adjuntar_copia_documento(tipo, id_doc, id_escrito);
                    }
                }
            },
            onContentReady: function () {
                $('.jconfirm-buttons').find('button:contains("{{ "Adjuntar"|trans|raw }}")').focus()
            }
        });
    }


    fnjs_insertar_copia_documento = function (tipo, id_doc, id_escrito) {
        var que = 'insertar_copia';
        fnjs_insertar_documento(tipo, id_doc, id_escrito, que);
    }

    fnjs_insertar_documento = function (tipo, id_doc, id_escrito, que = 'insertar', force = 'false') {
        var url_ajax = 'apps/escritos/controller/escrito_adjuntos_ajax.php';
        var param_json = {"que": que, "tipo_doc": tipo, "id_doc": id_doc, "id_escrito": id_escrito, "force": force};
        request = $.ajax({
            data: param_json,
            url: url_ajax,
            method: 'POST',
            dataType: 'json'
        });
        // alertar de que el proceso de copiar el etherpad puede ser lento
        $('#slow_load').show();
        request.done(function (json) {
            if (json.success != true) {
                err_tipo = json.err_tipo;
                if (err_tipo == 'antecedente') {
                    var msg = json.mensaje;
                    msg += "<br>";
                    msg += "{{ "¿Quiere adjuntar una copia?"|trans|raw }}";
                    $.confirm({
                        title: '{{ "AVISO"|trans|raw }}:',
                        content: msg,
                        columnClass: 'col-md-6',
                        buttons: {
                            cancel: {
                                text: '{{ "Cancel"|trans|raw }}',
                                action: function () {
                                    fnjs_actualizar();
                                }
                            },
                            copia: {
                                text: '{{ "adjuntar una copia"|trans|raw }}',
                                btnClass: 'btn-secondary',
                                action: function () {
                                    // alertar de que el proceso de copiar el etherpad puede ser lento
                                    $('#slow_load').show();
                                    // al forzar, es obligatorio poner copia, pues ya existe como antecedente.
                                    fnjs_insertar_documento(tipo, id_doc, id_escrito, que = 'insertar_copia', force = 'true');
                                }
                            }
                        }
                    });
                } else {
                    alert('{{ "respuesta"|trans|raw }}: ' + json.mensaje);
                }
            } else {
                // close div modal
                $('#ModalBuscar').modal('hide');
                $('#slow_load').hide();
                // abrirlo:
                fnjs_ver_doc_ep();
            }
        });
        request.fail(function (JqXHR, textStatus, errorThrown) {
            alert('An error occurred... NO sé pas!');
            console.error("Hi ha un error: " + textStatus, errorThrown);
        });
    }

    fnjs_adjuntar_copia_documento = function (tipo, id_doc, id_escrito) {
        var que = 'adjuntar_copia';
        fnjs_adjuntar_documento(tipo, id_doc, id_escrito, que);
    }
    fnjs_adjuntar_documento = function (tipo, id_doc, id_escrito, que = 'adjuntar', force = 'false') {
        var url_ajax = 'apps/escritos/controller/escrito_adjuntos_ajax.php';
        var param_json = {que: que, tipo_doc: tipo, id_doc: id_doc, id_escrito: id_escrito, force: force};
        request = $.ajax({
            data: param_json,
            url: url_ajax,
            method: 'POST'
        });
        request.done(function (json) {
            if (json.success != true) {
                err_tipo = json.err_tipo;
                if (err_tipo == 'antecedente') {
                    var msg = json.mensaje;
                    msg += "<br>";
                    msg += "{{ "¿Quiere adjuntar una copia?"|trans|raw }}";
                    $.confirm({
                        title: '{{ "AVISO"|trans|raw }}:',
                        content: msg,
                        columnClass: 'col-md-6',
                        buttons: {
                            cancel: {
                                text: '{{ "Cancel"|trans|raw }}',
                                action: function () {
                                    fnjs_actualizar();
                                }
                            },
                            copia: {
                                text: '{{ "adjuntar una copia"|trans|raw }}',
                                btnClass: 'btn-secondary',
                                action: function () {
                                    // alertar de que el proceso de copiar el etherpad puede ser lento
                                    $('#slow_load').show();
                                    // al forzar, es obligatorio poner copia, pues ya existe como antecedente.
                                    fnjs_adjuntar_documento(tipo, id_doc, id_escrito, que = 'adjuntar_copia', force = 'true');
                                }
                            }
                        }
                    });
                } else {
                    alert('{{ "respuesta"|trans|raw }}: ' + json.mensaje);
                }
            } else {
                // NO sirve el metodo ¡refresh' del fileinput parar cambiar la lista de docuemntos.
                // habrá que refrescar toda la página
                fnjs_actualizar();
            }
            $('#slow_load').hide();
        });
    }

    fnjs_buscar_antecedentes_para_escrito = function (n) {
        //n = 1 -> Entradas
        //n = 2 -> Expedientes
        //n = 3 -> Escritos-propuestas
        //n = 4 -> Documentos
        //n = 5 -> Documentos Etherpad
        $('#id_n').val(n);
        var err = 0;
        var que = 'buscar_' + n;
        var id_escrito = $('#id_escrito').val();
        var id_expediente = $('#id_expediente').val();

        if (!n) {
            alert("{{ "No se ha definido el tipo de escrito"|trans|raw }}");
            err = 1;
        }

        if (err != 1) {
            var url_ajax = 'apps/escritos/controller/escrito_adjuntos_ajax.php';
            var param_json = {que: que, id_escrito: id_escrito, id_expediente: id_expediente, tipo_n: n};
            request = $.ajax({
                data: param_json,
                url: url_ajax,
                method: 'POST'
            });
            request.done(function (rta) {
                if (rta == undefined) {
                    rta = '';
                }
                $('#modal-body').html(rta);
            });
        }
    }

    fnjs_del_adjunto = function (id_adjunto) {
        var que = 'quitar';
        var id_escrito = $('#id_escrito').val();
        var url_ajax = 'apps/escritos/controller/escrito_adjuntos_ajax.php';

        seguro = confirm("{{ "¿Está Seguro que desea quitar este adjunto?"|trans|raw }}");
            if (seguro) {
                //alert("Borrar entrada: "+id_entrada);
                var param_json = {que: que, id_adjunto: id_adjunto, id_escrito: id_escrito};
                request = $.ajax({
                    data: param_json,
                    url: url_ajax,
                    method: 'POST'
                });
                request.done(function (rta) {
                    rta_txt = rta;
                    if (rta_txt == undefined) {
                        rta_txt = '';
                    }
                    $('#lista_adjuntos_etherpad').html(rta);
                });
            }
    }

    fnjs_ver_adjunto = function (id_adjunto) {
        if (typeof event !== 'undefined') {
            event.preventDefault();
            event.stopPropagation();
            event.stopImmediatePropagation();
        }

        var winPrefs = "dependent=yes,width=1400,height=800,screenX=200,screenY=200,titlebar=yes,scrollbars=yes";
        var url_ajax = 'apps/etherpad/controller/getUrlEscrito.php';
        var param_json = {tipo_id: 'adjunto', id: id_adjunto};

        request = $.ajax({
            data: param_json,
            url: url_ajax,
            method: 'POST'
        });

        request.done(function (url) {
            win = window.open(url, "", winPrefs);
            win.focus();
        });

        request.fail(function (JqXHR, textStatus, errorThrown) {
            alert('An error occurred... Look at the console (F12 or Ctrl+Shift+I, Console tab) for more information!');
            console.error("Hi ha un error: " + textStatus, errorThrown);
        });

        return false;
    }

    /****** JA ESTAVA **********************/

    /**
     * Parecido al guardar normal, pero no tiene que volver a ningun sitio,
     * es para no perder los cambios al abrir la ventana de texto, y luego hacer actualizar.
     */
    fnjs_guardar_quiet = function () {
        var err = 0;
        //var destino=$('#destino').val();
        var prot_num_destino = $('#prot_num_destino').val();
        var asunto = $('#asunto').val();
        var entradilla = $('#entradilla').val();
        var ponente = $('#id_ponente').val();
        var id_expediente = $('#id_expediente').val();
        var id_escrito = $('#id_escrito').val();
        var f_escrito = $('#f_escrito').val();

        //if (!destino) { alert("{{ "Debe llenar el campo de destino"|trans|raw }}"); err=1; }
        //if (!prot_num_destino) { alert("{{ "Debe llenar el campo de protocolo destino"|trans|raw }}"); err=1; }
        if (!asunto) {
            alert("{{ "Debe llenar el campo de asunto"|trans|raw }}");
            err = 1;
        }
        //if (!entradilla) { alert("{{ "Debe llenar el campo entradilla"|trans|raw }}"); err=1; }
        if (!ponente) {
            alert("{{ "Debe llenar el campo del ponente"|trans|raw }}");
            err = 1;
        }
        //if (!f_escrito) { alert("{{ "Debe llenar el campo de fecha del escrito"|trans|raw }}"); err=1; }
        //if (!fnjs_fecha_en_intervalo('#f_escrito')) { err=1; }

        if (err != 1) {
            $('#que').val('guardar');
            datos = $('#form_escrito').serialize();
            request = $.ajax({
                data: datos,
                url: '{{ url_update }}',
                method: 'POST',
                dataType: 'json'
            });
            request.done(function (json) {
                if (json.success != true) {
                    alert('{{ "respuesta"|trans|raw }}: ' + json.mensaje);
                }
            });
        }
    }


    fnjs_ver_doc_ep = function () {
        if (typeof event !== 'undefined') {
            event.preventDefault();
            event.stopPropagation();
            event.stopImmediatePropagation();
        }
        // primero guardar los datos que se hayan modificado, porque si pasa algo hay que volver a meterlos.
        fnjs_guardar_quiet();

        var id_escrito = $('#id_escrito').val();
        var winPrefs = "dependent=yes,width=1400,height=800,screenX=200,screenY=200,titlebar=yes,scrollbars=yes";
        var url_ajax = 'apps/etherpad/controller/getUrlEscrito.php';
        var param_json = {tipo_id: 'escrito', id: id_escrito};

        request = $.ajax({
            data: param_json,
            url: url_ajax,
            method: 'POST'
        });

        request.done(function (rta) {
            // antes, dentro del ajax, hacia falta el responseText
            //url=rta.responseText;
            url = rta;
            win = window.open(url, "", winPrefs);
            if (win) { // si no existe es null.
                // Para que al cerrar la ventana se actualize ésta.
                var timer = setInterval(function () {
                    if (win.closed) {
                        clearInterval(timer);
                        fnjs_actualizar();
                    }
                }, 1000);
                win.focus();
            }
        });

        request.fail(function (JqXHR, textStatus, errorThrown) {
            alert('An error occurred... Look at the console (F12 or Ctrl+Shift+I, Console tab) for more information!');
            console.error("Hi ha un error: " + textStatus, errorThrown);
        });

        return false;
    }

    fnjs_actualizar = function () {
        var id_expediente = $('#id_expediente').val();
        var filtro = $('#filtro').val();
        var id_escrito = $('#id_escrito').val();
        var modo = $('#modo').val();
        var accion = $('#accion').val();
        var str_condicion = $('#str_condicion').val();
        var url_doc = '{{ url_escrito }}';
        var param_json = {
            accion: accion,
            id_escrito: id_escrito,
            filtro: filtro,
            id_expediente: id_expediente,
            modo: modo,
            condicion: str_condicion
        };
        request = $.ajax({
            data: param_json,
            url: url_doc,
            method: 'POST'
        });
        request.done(function (resposta) {
            fnjs_mostra_resposta(resposta, "#main");
        });
        request.fail(function (JqXHR, textStatus, errorThrown) {
            alert('An error occurred... Look at the console (F12 or Ctrl+Shift+I, Console tab) for more information!');
            console.error("Hi ha un error: " + textStatus, errorThrown);
        });

    }

    fnjs_add_escrito = function (n) {
        if (typeof event !== 'undefined') {
            event.preventDefault();
            event.stopPropagation();
            event.stopImmediatePropagation();
        }

        // primero guardar los datos que se hayan modificado, porque si pasa algo hay que volver a meterlos.
        fnjs_guardar_escrito(1); // está en: _escrito_form_js.html El parametro quiet=1 es para que no pregunte nada.
        //n = 1 -> etherpad
        //n = 2 -> ethercalc
        //n = 3 -> otros
        //n = 4 -> documento etherpad
        var err = 0;
        var id_escrito = $('#id_escrito').val();
        var f_escrito = $('#f_escrito').val();

        if (!fnjs_comprobar_fecha('#f_escrito')) {
            err = 1;
        }
        if (!f_escrito) {
            alert("{{ "Debe llenar el campo de fecha del escrito"|trans|raw }}");
            err = 1;
        }
        if (!fnjs_fecha_en_intervalo('#f_escrito')) {
            err = 0;
        } // Se permite, simplemente avisa.
        if (!n || (n != 1 && n != 4 && n != 5)) {
            alert("{{ "No se ha definido el tipo de escrito"|trans|raw }}");
            err = 1;
        }

        if (err != 1) {
            // grabar el tipo de doc
            var url_doc = 'apps/escritos/controller/escrito_update.php';
            var param_json = {que: 'tipo_doc', id_escrito: id_escrito, tipo_doc: n};
            request = $.ajax({
                data: param_json,
                url: url_doc,
                method: 'POST'
            });
            request.done(function (rta) {
                rta_txt = rta.responseText;
                if (rta_txt == undefined) {
                    rta_txt = '';
                }
                if (rta_txt != '' && rta_txt != '\n') {
                    alert('error: ' + rta_txt);
                }
            });

            switch (n) {
                case 1:
                    fnjs_ver_doc_ep();
                    break;
                case 2:
                    alert('hay que programar la función para ethercalc');
                    break;
                case 3:
                    alert('hay que programar la función para otros');
                    break;
                case 4:
                case 5:
                    //alert('hay que programar la función para documentos');
                    fnjs_buscar_doc_ep(n);
                    break;
            }
        }
        return false;
    }

    fnjs_buscar_doc_ep = function (n) {
        //n = 1 -> Entradas
        //n = 2 -> Expedientes
        //n = 3 -> Escritos-propuestas
        //n = 4 -> Documentos
        //n = 5 -> Documentos Etherpad
        var err = 0;
        var que = 'buscar_' + n;
        var id_escrito = $('#id_escrito').val();
        var id_expediente = $('#id_expediente').val();
        if (!n) {
            alert("{{ "No se ha definido el tipo de escrito"|trans|raw }}");
            err = 1;
        }

        if (err != 1) {
            var url_ajax = 'apps/escritos/controller/escrito_adjuntos_ajax.php';
            var param_json = {que: que, id_escrito: id_escrito, id_expediente: id_expediente, tipo_n: n};
            request = $.ajax({
                data: param_json,
                url: url_ajax,
                method: 'POST'
            });
            request.done(function (rta) {
                if (rta == undefined) {
                    rta = '';
                }
                $('#modal-body').html(rta);
            });
        }
    }
</script>