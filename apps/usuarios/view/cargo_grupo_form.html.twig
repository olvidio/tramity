<script>
    fnjs_guardar = function (formulario) {
        datos = $(formulario).serialize();
        request = $.ajax({
            data: datos,
            url: 'apps/usuarios/controller/cargo_grupo_update.php',
            method: 'POST',
            dataType: 'json'
        });
        request.done(function (json) {
            if (json.success != true) {
                alert('{{ "respuesta"|trans|raw }}: ' + json.mensaje);
            } else {
                {{ oPosicion.js_atras(1)|raw }}
            }
        });
    }
</script>
<div class="card">
    <div class="card-header">
        <h5 class="card-title">{{ "Datos del grupo"|trans|raw }}</h5>
    </div>
    <div class="card-body">
        <form class="user" id="frm_cargo" name="frm_cargo" action="" method="post">
            {{ oHash.getCamposHtml|raw }}
            <div class="mb-3">
                <label for="example" class="form-label">{{ "Seleccione el cargo del trámite"|trans|raw }}:</label>
                {{ oDesplCargosRef.desplegable()|raw }}
            </div>
            <div class="mb-3">
                <label for="descripcion" class="form-label">{{ "Descripción"|trans|raw }}</label>
                <input type="text" class="form-control col-6" id="descripcion" name="descripcion"
                       placeholder="descripcion" value="{{ descripcion }}">
            </div>
            <div class="mb-3">
                <label for="example" class="form-label">{{ "Seleccione los cargos"|trans|raw }}:</label>
            </div>
            {{ oDesplCargos.checkbox(3)|raw }}
            <div class="mb-3">
                <button onclick="fnjs_guardar(this.form);" type="button"
                        class="btn btn-primary w-100">{{ "Guardar"|trans|raw }}</button>
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        let lastChecked;
        const checkboxes = document.querySelectorAll('input[type="checkbox"]');
        checkboxes.forEach(checkbox => checkbox.addEventListener('click', handleCheck));
    });

    function handleCheck(e) {
        const checkboxes = document.querySelectorAll('input[type="checkbox"]');
        let userChecksFlag = false;
        let userUnchecksFlag = false;
        if (e.shiftKey && this.checked) {
            //let's start looping here
            checkboxes.forEach(checkbox => {
                //let's check if the current 'checkbox' is
                //one of the references

                if (checkbox === this || checkbox === lastChecked) {
                    //now we need to set the checkboxStatus to true
                    userChecksFlag = !userChecksFlag;
                    if (userChecksFlag) {
                        console.log("Start to check the elements in the middle!")
                        console.log(checkbox)

                    } else {
                        console.log(checkbox)
                        console.log("End here!")
                    }

                } else {
                    console.log(checkbox)
                }

                //after we cross our first reference the checkboxStatus is set to true
                //we can start 'checking' the boxes that follow the encountered reference
                if (userChecksFlag) {
                    checkbox.checked = true; //if the status is true, we'll 'check' the checkbox
                }
            })
        }
        //similar steps for unchecking
        if (e.shiftKey && !this.checked) {
            checkboxes.forEach(checkbox => {
                if (checkbox === this || checkbox === lastChecked) {
                    userUnchecksFlag = !userUnchecksFlag;
                }
                if (userUnchecksFlag) {
                    checkbox.checked = false;
                }
            })
            lastChecked.checked = false;
        }
        lastChecked = this;
    }

</script>