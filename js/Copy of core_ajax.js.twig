<script>
function fnjs_selectAll(formulario,Name,val,aviso){
	aviso = typeof aviso !== 'undefined' ? aviso : 1;
	if (aviso == 1) {
		alert ("{{ "Sólo se seleccionan los ítems que se ha visualizado."|trans }}");
	}
	var form=$(formulario).attr('id');
	/* selecciono los elementos input del id=formulario */
	var selector=$('#'+form+' input');
	if(val==null){var val='toggle';}
	$(selector).each(function(i,item) {
			if($(item).attr('name') == Name) {
				switch (val) {
					case 'all':
						$(item).prop('checked',true);
						break;
					case 'none':
						$(item).prop('checked',false);
						break;
					case 'toggle':
						$(item).trigger("click");
						break;
				}
			}
		}
	);
}

function fnjs_solo_uno_grid(formulario) {
	var s=0;
	var form=$(formulario).attr('id');
	/* selecciono los elementos con class="slick-cell-checkboxsel" de las tablas del id=formulario */
	var sel=$('#'+form+' div.slick-cell-checkboxsel > input:checked');
	var s = sel.length;

	if ( s > 1 ) {
		var txt = sprintf ("{{ "Sólo puede seleccionar un elemento. Ha selecionado %s."|trans }}",s);
		alert (txt);
	}
	if (s==0) {
		alert ("{{ "No ha seleccionado ninguna fila. debe hacer click en algún chekbox de la izquierda."|trans }}");
	}
	return s;
}

function fnjs_solo_uno(formulario, multiple = false) {
	var s=0;
	var form=$(formulario).attr('id');
	/* selecciono los elementos con class="sel" de las tablas del id=formulario */
	var sel=$('#'+form+' input.sel:checked');
	var s = sel.length;

	if ( s > 1 && !multiple) {
		var txt = sprintf ("{{ "Sólo puede seleccionar un elemento. Ha selecionado %s."|trans }}",s);
		alert (txt);
	}
	if (s==0) {
		alert ("{{ "No ha seleccionado ninguna fila. debe hacer click en algún chekbox de la izquierda."|trans }}");
	}
	return s;
}

<!-- Esta funcion comprueba si una v_fecha es correcta --> 
<!-- Esta funcion necesita que se le envie la v_fecha con formato d/m/y o dd/mm/yyyy --> 
<!-- Ahora tambien acepta: d-m-y o dd-mm-yyyy --> 
<!-- La función parseInt da un error si empieza por 0 (y el siguiente número no entra en el rango Octal 0-7), -->
<!-- porque interpreta que es un valor en Octal. Se pone ",10" para indicar que es un valor decimal. -->
function fnjs_comprobar_fecha(id) {
  calDate = new Date();
  var year  = calDate.getFullYear();
  var month  = calDate.getMonth()+1; // sumo 1 porque empieza a contar en 0 (enero)

  str_fecha=$(id).val();
  if (str_fecha==null || str_fecha=="") return false;
  name_fecha=$(id).attr('name');
  str_fecha=str_fecha.replace(/\-/g,"/");
  v_fecha=str_fecha.split("/");
  if(v_fecha.length==3)
  {
     if(parseInt(v_fecha[0],10)>31 || (parseInt(v_fecha[0],10)<1))
     {
        alert(name_fecha+": {{ "el dia no es correcto"|trans }}");
		$(id).focus();
        return false;
     }
   
     if(parseInt(v_fecha[1],10)>12 || (parseInt(v_fecha[1],10)<1))
     {
        alert(name_fecha+": {{ "el mes no es correcto"|trans }}");
		$(id).focus();
        return false;
     }
     // Con esto compruebo que esté correctamente formada y verifico años bisiestos.
     var mi_v_fecha = new Date(parseInt(v_fecha[2],10),parseInt(v_fecha[1],10)-parseInt(1,10),parseInt(v_fecha[0],10))
     if(parseInt(v_fecha[0],10)!=parseInt(mi_v_fecha.getDate()))
     {
        alert(name_fecha+": {{ "La fecha introducida NO es correcta"|trans }}");
		$(id).focus();
        return false;
     }
	 $(id).val(str_fecha); // por si he cambiado los "-" por "/".
     return true;
  } else {
  	  // pruebo de poner el mes y el año actual si sólo tengo el dia
  	 if (v_fecha.length==1 && v_fecha[0]) {
  	 	dia=parseInt(v_fecha[0],10);
  	 	if(isNaN(dia) || dia>31 || (dia<1)) {
  	 		alert(name_fecha+": {{ "El formato debe ser dd/mm/yyyy"|trans }}");
		 	$(id).focus();
		 	return false;
  	 	}
		$(id).val(v_fecha[0]+"/"+month+"/"+year);
		$(id).focus();
		return true;
  	 } else {
	     alert(name_fecha+": {{ "El formato debe ser dd/mm/yyyy"|trans }}");
		 $(id).focus();
		 return false;
	 }
  }
}

fnjs_fecha_en_intervalo=function(id){
    var rta=fnjs_comprobar_fecha(id);   
	if ( rta === false) {
		return false;
	} else {
		if (rta === true) {
		} else {
			$(id).val(rta);
		}
	}
	var hoy=new Date();
	var t = hoy.getTime();
	var t1 = t- {{ error_fecha }}*24*60*60*1000;
	var t2 = t+ {{ error_fecha }}*24*60*60*1000;

	var fecha_2;
	fecha_2=$(id).val().split("/");

	/* con new Date(); no acaba de funcionar bien para los dias 31.
		 Lo hago con new Date(Date.UTC(y,m,d,h,m,s));  */

	var diaa=parseInt(fecha_2[0],10);
	var mess=parseInt(fecha_2[1]-1,10); /* hay que restar 1 porque cuenta desde 0 */
	/* si el año sólo tiene 2 digitos le pongo 4 (los de este año) */
	if (fecha_2[2].length < 4) {
			var siglo=hoy.getFullYear();
			siglo=Math.floor(siglo/100)*100;
			var any=siglo+parseInt(fecha_2[2],10);
	} else {
			var any=(parseInt(fecha_2[2],10));
	}
	
	fecha = new Date(Date.UTC(any, mess, diaa, 0, 0, 0))
	var f = fecha.getTime();

	if (f<t1 || f>t2) {
		alert("{{ "La fecha es muy distinta de hoy (más de %s días)"|trans|format(error_fecha) }}");
		return false;
	} else {
		return true;
	}
}
</script>